##
## ---------------------------------
## | M A S T O D O N - D O C K E R |
## ---------------------------------
##
## Container based media tools configuration
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration items for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3'

######################
# SERVICES TO LAUNCH #
######################

services:
  # ----------------------------------------
  # PORTAINER
  # Docker Container Management
  # ----------------------------------------
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    networks:
      - web
    expose:
      - 9000
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${BASE_DOCKER_PATH}/portainer:/data'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/etc/localtime:/etc/localtime:ro'

  # ----------------------------------------
  # CLOUDFLARED
  # Tunneling back to services
  # ----------------------------------------
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    networks:
      - web
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}

  # ----------------------------------------
  # WATCHTOWER
  # Automatic Update Service for Docker
  # ----------------------------------------
  watchtower_mastodon:
    image: containrrr/watchtower
    container_name: watchtower_mastodon
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    networks:
      - internal
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_FROM_ADDRESS}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_NOTIFICATION_EMAIL_TO}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_LOGIN}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASSWORD}
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/etc/ssl/certs:/etc/ssl/certs'
    command: --schedule @midnight --cleanup
